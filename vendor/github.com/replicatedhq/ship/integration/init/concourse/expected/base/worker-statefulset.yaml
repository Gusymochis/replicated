apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: concourse-worker
    release: concourse
  name: concourse-worker
spec:
  podManagementPolicy: Parallel
  replicas: 2
  serviceName: concourse-worker
  template:
    metadata:
      annotations: null
      labels:
        app: concourse-worker
        release: concourse
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: concourse-worker
                  release: concourse
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -c
        - |-
          cp /dev/null /tmp/.liveness_probe
          rm -rf ${CONCOURSE_WORK_DIR:-/concourse-work-dir}/*
          while ! concourse retire-worker --name=${HOSTNAME} | grep -q worker-not-found; do
            touch /tmp/.pre_start_cleanup
            sleep 5
          done
          rm -f /tmp/.pre_start_cleanup
          concourse worker --name=${HOSTNAME} | tee -a /tmp/.liveness_probe
        command:
        - /bin/sh
        env:
        - name: CONCOURSE_WORK_DIR
          value: /concourse-work-dir
        - name: CONCOURSE_TSA_HOST
          value: concourse-web:2222
        - name: CONCOURSE_TSA_PUBLIC_KEY
          value: /concourse-keys/host_key.pub
        - name: CONCOURSE_TSA_WORKER_PRIVATE_KEY
          value: /concourse-keys/worker_key
        - name: CONCOURSE_GARDEN_BIND_PORT
          value: "7777"
        - name: CONCOURSE_BAGGAGECLAIM_DRIVER
          value: naive
        - name: LIVENESS_PROBE_FATAL_ERRORS
          value: |-
            guardian.api.garden-server.create.failed
            baggageclaim.api.volume-server.create-volume-async.failed-to-create
        image: concourse/concourse:4.2.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |-
                while ! concourse retire-worker --name=${HOSTNAME} | grep -q worker-not-found; do
                  sleep 5
                done
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |-
              FATAL_ERRORS=$( echo "${LIVENESS_PROBE_FATAL_ERRORS}" | grep -q '\S' && \
                  grep -F "${LIVENESS_PROBE_FATAL_ERRORS}" /tmp/.liveness_probe )
              cp /dev/null /tmp/.liveness_probe
              if [ ! -z "${FATAL_ERRORS}" ]; then
                >&2 echo "Fatal error detected: ${FATAL_ERRORS}"
                exit 1
              fi
              if [ -f /tmp/.pre_start_cleanup ]; then
                >&2 echo "Still trying to clean up before starting concourse. 'fly prune-worker -w ${HOSTNAME}' might need to be called to force cleanup."
                exit 1
              fi
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        name: concourse-worker
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /concourse-keys
          name: concourse-keys
          readOnly: true
        - mountPath: /concourse-work-dir
          name: concourse-work-dir
      serviceAccountName: concourse-worker
      terminationGracePeriodSeconds: 60
      tolerations: []
      volumes:
      - name: concourse-keys
        secret:
          defaultMode: 256
          items:
          - key: host-key-pub
            path: host_key.pub
          - key: worker-key
            path: worker_key
          - key: worker-key-pub
            path: worker_key.pub
          secretName: concourse-concourse
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: concourse-work-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
